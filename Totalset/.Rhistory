`1` <- read.csv("C:/Users/rajes/Desktop/RajeshVanga_Assignment1/Total set/1.txt", comment.char="#")
View(`1`)
cosine <- read.csv("C:/Users/rajes/Desktop/RajeshVanga_Assignment1/cosine.csv", header=FALSE)
View(cosine)
View(`1`)
View(`1`)
View(cosine)
library(proxy)
library(tm)
library(fpc)
setwd("D:\\KDD\\Rajesh_Assign2\\Totalset");
cname <- file.path("D:\\KDD\\Rajesh_Assign2" , "Totalset");
#dir(cname)
docs <- Corpus(DirSource(cname));
#docs <- Corpus(VectorSource(docs))
docs <- tm_map(docs, removePunctuation);
docs <- tm_map(docs, removeNumbers);
docs <- tm_map(docs, content_transformer(tolower)) ;
docs <- tm_map(docs, removeWords, stopwords("english")) ;
docs <- tm_map(docs, stripWhitespace);
doctermmat <- DocumentTermMatrix(docs)
m <- as.matrix(doctermmat)
dim(m)
write.csv(m, file="dtm.csv")
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
print(ekcoutput)
#plotcluster(ekcinput, ekcoutput$cluster)
#print(ckcoutput)
#plotcluster(ckcinput, ckcoutput$cluster)
#print(jkcoutput)
#plotcluster(jkcinput, jkcoutput$cluster)
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
print(ekcoutput)
#plotcluster(ekcinput, ekcoutput$cluster)
#print(ckcoutput)
#plotcluster(ckcinput, ckcoutput$cluster)
#print(jkcoutput)
#plotcluster(jkcinput, jkcoutput$cluster)
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
print(ekcoutput)
#plotcluster(ekcinput, ekcoutput$cluster)
#print(ckcoutput)
#plotcluster(ckcinput, ckcoutput$cluster)
#print(jkcoutput)
#plotcluster(jkcinput, jkcoutput$cluster)
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
#print(ekcoutput)
plotcluster(ekcinput, ekcoutput$cluster)
#print(ckcoutput)
#plotcluster(ckcinput, ckcoutput$cluster)
#print(jkcoutput)
#plotcluster(jkcinput, jkcoutput$cluster)
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
#print(ekcoutput)
#plotcluster(ekcinput, ekcoutput$cluster)
print(ckcoutput)
plotcluster(ckcinput, ckcoutput$cluster)
#print(jkcoutput)
#plotcluster(jkcinput, jkcoutput$cluster)
#install.packages("tm")
#install.packages("fpc")
#install.packages("proxy")
library(proxy)
library(tm)
library(fpc)
#docsfolder <- file.path("D:\\KDD\\Rajesh_Assign2", "TotalSet")
#dir(docsfolder);
inputfile <-read.csv("D:\\KDD\\Rajesh_Assign2\\dtm.csv");
#summary(inputfile)
#print(inputfile)
matrix<-data.matrix(inputfile)
#print(matrix)
ekcinput <- proxy::dist(matrix, method = "euclidean")
#print(ekcinput)
ckcinput <- proxy::dist(matrix, method = "cosine")
#print(ckcinput)
jkcinput  <- proxy::dist(matrix, method = "jaccard")
#print(jkcinput)
ekcoutput <-kmeans(ekcinput,centers=5)
ckcoutput <-kmeans(ckcinput,centers=5)
jkcoutput <-kmeans(jkcinput,centers=5)
#print(ekcoutput)
#plotcluster(ekcinput, ekcoutput$cluster)
#print(ckcoutput)
#plotcluster(ckcinput, ckcoutput$cluster)
print(jkcoutput)
plotcluster(jkcinput, jkcoutput$cluster)
write.csv(ekcinput, file="eucledianmatrix.csv")
write.csv(ekcinput, file="eucledianmatrix.csv")
x <- as.matrix(ekcinput);
write.csv(x, file="eucledianmatrix.csv")
x <- as.matrix(ckcinput);
write.csv(x, file="cosinematrix.csv")
x <- as.matrix(jkcinput);
write.csv(x, file="jaccardmatrix.csv")
print(ekcoutput)
